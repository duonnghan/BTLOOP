/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlbaihat;

import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JPanel;
import qlbaihat.controller.CalendarManagement;
import qlbaihat.controller.DataBase;
import qlbaihat.controller.RequirementController;
import qlbaihat.controller.SongController;
import qlbaihat.model.Song;
import qlbaihat.model.Requirement;

/**
 *
 * @author HD
 */
public class GUI2 extends javax.swing.JFrame {
    /**
     * Creates new form GUI2
     */
    public GUI2() {
        
        initComponents();
        resetColor(pl_addrequest);
        resetColor(pl_management);
        resetColor(pl_schedule);
        setColor(pl_playlist);
        ind_playlist.setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mode = new javax.swing.ButtonGroup();
        parent = new javax.swing.JPanel();
        content_manage = new javax.swing.JPanel();
        mrgScrollPane = new javax.swing.JScrollPane();
        mrgTable = new javax.swing.JTable();
        mrgDivLine = new javax.swing.JSeparator();
        mgrSearchBtn = new javax.swing.JButton();
        mgrSearchLabel = new javax.swing.JLabel();
        showDanhSach = new javax.swing.JButton();
        mrgViewBtn = new javax.swing.JButton();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        refresh = new javax.swing.JButton();
        sidePane = new javax.swing.JPanel();
        pl_playlist = new javax.swing.JPanel();
        ind_playlist = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pl_addrequest = new javax.swing.JPanel();
        ind_addrequest = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pl_schedule = new javax.swing.JPanel();
        ind_schedule = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        pl_management = new javax.swing.JPanel();
        ind_management = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        content_playlist = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        playlistRdioAllSongs = new javax.swing.JRadioButton();
        playlistRdioFavoriteSongs = new javax.swing.JRadioButton();
        addSong = new javax.swing.JRadioButton();
        playlostSearchBtn = new javax.swing.JRadioButton();
        playlistScrollPane = new javax.swing.JScrollPane();
        listSong = new javax.swing.JTable();
        playlistDivLine = new javax.swing.JSeparator();
        ok = new javax.swing.JButton();
        playlistSearchField = new javax.swing.JTextField();
        playlistResetBtn = new javax.swing.JButton();
        Month = new javax.swing.JComboBox<>();
        content_scheduling = new javax.swing.JPanel();
        schdlViewLabel = new javax.swing.JLabel();
        schdlViewBtn = new javax.swing.JButton();
        schdlDivLine = new javax.swing.JSeparator();
        schdlScrollPane = new javax.swing.JScrollPane();
        schdlTable = new javax.swing.JTable();
        schdlRequestBtn = new javax.swing.JButton();
        schdlPlayedBtn = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        content_request = new javax.swing.JPanel();
        resNameLabel = new javax.swing.JLabel();
        resNameField = new javax.swing.JTextField();
        resArtistLabel = new javax.swing.JLabel();
        resArtistField = new javax.swing.JTextField();
        resSenderLabel = new javax.swing.JLabel();
        resSenderField = new javax.swing.JTextField();
        resPhoneLabel = new javax.swing.JLabel();
        resAddrLabel = new javax.swing.JLabel();
        resAdrrField = new javax.swing.JTextField();
        resRecipientLabel = new javax.swing.JLabel();
        resRecipientField = new javax.swing.JTextField();
        resDateLabel = new javax.swing.JLabel();
        resMsgLabel = new javax.swing.JLabel();
        resMsgScrollPane = new javax.swing.JScrollPane();
        resMsgTextArea = new javax.swing.JTextArea();
        resSendBtn = new javax.swing.JButton();
        resSubmitBtn = new javax.swing.JButton();
        resCancelBtn = new javax.swing.JButton();
        resPhoneField = new javax.swing.JFormattedTextField();
        resDataField = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý bài hát");

        mrgTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên bài hát", "Ca sĩ", "Số lượt yêu cầu", "Các thính giả yêu cầui"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        mrgScrollPane.setViewportView(mrgTable);

        mgrSearchBtn.setText("Thêm vào lịch");
        mgrSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mgrSearchBtnActionPerformed(evt);
            }
        });

        mgrSearchLabel.setText("Ngày phát");

        showDanhSach.setText("Tìm kiếm");
        showDanhSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDanhSachActionPerformed(evt);
            }
        });

        mrgViewBtn.setText("Xem yêu cầu");
        mrgViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrgViewBtnActionPerformed(evt);
            }
        });

        refresh.setText("Refresh");
        refresh.setToolTipText("");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout content_manageLayout = new javax.swing.GroupLayout(content_manage);
        content_manage.setLayout(content_manageLayout);
        content_manageLayout.setHorizontalGroup(
            content_manageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(content_manageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(content_manageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mrgScrollPane)
                    .addGroup(content_manageLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(content_manageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(content_manageLayout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(mrgDivLine))
                            .addGroup(content_manageLayout.createSequentialGroup()
                                .addComponent(mgrSearchLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(showDanhSach)
                                .addGap(36, 36, 36)
                                .addComponent(refresh)
                                .addGap(0, 134, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, content_manageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mgrSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(mrgViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        content_manageLayout.setVerticalGroup(
            content_manageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, content_manageLayout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addGroup(content_manageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(content_manageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(showDanhSach)
                        .addComponent(mgrSearchLabel)
                        .addComponent(refresh)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(content_manageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, content_manageLayout.createSequentialGroup()
                        .addComponent(mrgDivLine, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mrgScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, content_manageLayout.createSequentialGroup()
                        .addGroup(content_manageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mrgViewBtn)
                            .addComponent(mgrSearchBtn))
                        .addContainerGap())))
        );

        sidePane.setBackground(new java.awt.Color(76, 41, 211));

        pl_playlist.setBackground(new java.awt.Color(102, 51, 255));
        pl_playlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pl_playlistMousePressed(evt);
            }
        });
        pl_playlist.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_playlist.setOpaque(false);

        javax.swing.GroupLayout ind_playlistLayout = new javax.swing.GroupLayout(ind_playlist);
        ind_playlist.setLayout(ind_playlistLayout);
        ind_playlistLayout.setHorizontalGroup(
            ind_playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        ind_playlistLayout.setVerticalGroup(
            ind_playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        pl_playlist.add(ind_playlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 50));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Danh sách bài hát");
        pl_playlist.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("QUẢN LÝ BÀI HÁT");

        pl_addrequest.setBackground(new java.awt.Color(102, 51, 255));
        pl_addrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pl_addrequestMousePressed(evt);
            }
        });
        pl_addrequest.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_addrequest.setOpaque(false);

        javax.swing.GroupLayout ind_addrequestLayout = new javax.swing.GroupLayout(ind_addrequest);
        ind_addrequest.setLayout(ind_addrequestLayout);
        ind_addrequestLayout.setHorizontalGroup(
            ind_addrequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        ind_addrequestLayout.setVerticalGroup(
            ind_addrequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        pl_addrequest.add(ind_addrequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 50));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Thêm yêu cầu");
        pl_addrequest.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        pl_schedule.setBackground(new java.awt.Color(102, 51, 255));
        pl_schedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pl_scheduleMousePressed(evt);
            }
        });
        pl_schedule.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_schedule.setOpaque(false);

        javax.swing.GroupLayout ind_scheduleLayout = new javax.swing.GroupLayout(ind_schedule);
        ind_schedule.setLayout(ind_scheduleLayout);
        ind_scheduleLayout.setHorizontalGroup(
            ind_scheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        ind_scheduleLayout.setVerticalGroup(
            ind_scheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        pl_schedule.add(ind_schedule, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 50));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Lịch phát sóng");
        pl_schedule.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        pl_management.setBackground(new java.awt.Color(102, 51, 255));
        pl_management.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pl_managementMousePressed(evt);
            }
        });
        pl_management.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_management.setOpaque(false);

        javax.swing.GroupLayout ind_managementLayout = new javax.swing.GroupLayout(ind_management);
        ind_management.setLayout(ind_managementLayout);
        ind_managementLayout.setHorizontalGroup(
            ind_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        ind_managementLayout.setVerticalGroup(
            ind_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        pl_management.add(ind_management, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 50));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Quản lý");
        pl_management.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("v 1.0");

        javax.swing.GroupLayout sidePaneLayout = new javax.swing.GroupLayout(sidePane);
        sidePane.setLayout(sidePaneLayout);
        sidePaneLayout.setHorizontalGroup(
            sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pl_playlist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pl_addrequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pl_schedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pl_management, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(sidePaneLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        sidePaneLayout.setVerticalGroup(
            sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePaneLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(99, 99, 99)
                .addComponent(pl_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pl_addrequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pl_schedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pl_management, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(252, Short.MAX_VALUE))
        );

        content_playlist.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Chọn chế độ");
        content_playlist.add(jLabel7);
        jLabel7.setBounds(56, 50, 149, 43);

        mode.add(playlistRdioAllSongs);
        playlistRdioAllSongs.setText("Tất cả bài hát.");
        playlistRdioAllSongs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playlistRdioAllSongsActionPerformed(evt);
            }
        });
        content_playlist.add(playlistRdioAllSongs);
        playlistRdioAllSongs.setBounds(292, 66, 95, 23);

        mode.add(playlistRdioFavoriteSongs);
        playlistRdioFavoriteSongs.setText("Bài hát được yêu thích nhất trong tháng");
        playlistRdioFavoriteSongs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playlistRdioFavoriteSongsActionPerformed(evt);
            }
        });
        content_playlist.add(playlistRdioFavoriteSongs);
        playlistRdioFavoriteSongs.setBounds(292, 95, 217, 23);

        mode.add(addSong);
        addSong.setText("Thêm bài hát");
        addSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongActionPerformed(evt);
            }
        });
        content_playlist.add(addSong);
        addSong.setBounds(292, 121, 87, 23);

        mode.add(playlostSearchBtn);
        playlostSearchBtn.setText("Tìm kiếm bài hát:");
        playlostSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playlostSearchBtnActionPerformed(evt);
            }
        });
        content_playlist.add(playlostSearchBtn);
        playlostSearchBtn.setBounds(292, 151, 105, 23);

        listSong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên bài hát", "Ca sĩ", "Nhạc sĩ", "Thể loại", "Năm", "Lượt yêu cầu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        playlistScrollPane.setViewportView(listSong);

        content_playlist.add(playlistScrollPane);
        playlistScrollPane.setBounds(56, 242, 849, 383);
        content_playlist.add(playlistDivLine);
        playlistDivLine.setBounds(120, 230, 849, 10);

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okputOk(evt);
            }
        });
        content_playlist.add(ok);
        ok.setBounds(355, 197, 93, 23);
        content_playlist.add(playlistSearchField);
        playlistSearchField.setBounds(403, 151, 230, 23);

        playlistResetBtn.setText("Reset lượt yêu cầu");
        playlistResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playlistResetBtnActionPerformed(evt);
            }
        });
        content_playlist.add(playlistResetBtn);
        playlistResetBtn.setBounds(489, 197, 123, 23);

        Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        Month.setEnabled(false);
        Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthActionPerformed(evt);
            }
        });
        content_playlist.add(Month);
        Month.setBounds(535, 83, 77, 20);

        schdlViewLabel.setText("Xem lịch:");

        schdlViewBtn.setText("Xem");

        schdlTable.setModel(scdlTM);
        schdlScrollPane.setViewportView(schdlTable);

        schdlRequestBtn.setText("Xem yêu cầu");
        schdlRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schdlRequestBtnActionPerformed(evt);
            }
        });

        schdlPlayedBtn.setText("Đã phát");

        javax.swing.GroupLayout content_schedulingLayout = new javax.swing.GroupLayout(content_scheduling);
        content_scheduling.setLayout(content_schedulingLayout);
        content_schedulingLayout.setHorizontalGroup(
            content_schedulingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(content_schedulingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(schdlScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
                .addGap(28, 28, 28))
            .addGroup(content_schedulingLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(schdlDivLine)
                .addGap(48, 48, 48))
            .addGroup(content_schedulingLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(content_schedulingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(content_schedulingLayout.createSequentialGroup()
                        .addComponent(schdlViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(schdlRequestBtn)
                        .addGap(48, 48, 48)
                        .addComponent(schdlPlayedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(content_schedulingLayout.createSequentialGroup()
                        .addComponent(schdlViewLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        content_schedulingLayout.setVerticalGroup(
            content_schedulingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(content_schedulingLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(content_schedulingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(schdlViewLabel)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(content_schedulingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schdlViewBtn)
                    .addComponent(schdlRequestBtn)
                    .addComponent(schdlPlayedBtn))
                .addGap(18, 18, 18)
                .addComponent(schdlDivLine, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(schdlScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        content_playlist.add(content_scheduling);
        content_scheduling.setBounds(40, 0, 859, 559);

        resNameLabel.setText("Tên bài hát:");

        resNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resNameFieldActionPerformed(evt);
            }
        });

        resArtistLabel.setText("Tên ca sĩ:");

        resSenderLabel.setText("Tên người gửi:");

        resPhoneLabel.setText("Số điện thoại:");

        resAddrLabel.setText("Địa chỉ:");

        resRecipientLabel.setText("Tên người nhận:");

        resDateLabel.setText("Ngày yêu cầu:");

        resMsgLabel.setText("Lời nhắn:");

        resMsgTextArea.setColumns(20);
        resMsgTextArea.setRows(5);
        resMsgScrollPane.setViewportView(resMsgTextArea);

        resSendBtn.setText("Gửi");
        resSendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resSendBtnActionPerformed(evt);
            }
        });

        resSubmitBtn.setText("Xong");
        resSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resSubmitBtnActionPerformed(evt);
            }
        });

        resCancelBtn.setText("Hủy");
        resCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resCancelBtnActionPerformed(evt);
            }
        });

        resPhoneField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        resDataField.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout content_requestLayout = new javax.swing.GroupLayout(content_request);
        content_request.setLayout(content_requestLayout);
        content_requestLayout.setHorizontalGroup(
            content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(content_requestLayout.createSequentialGroup()
                .addContainerGap(240, Short.MAX_VALUE)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(content_requestLayout.createSequentialGroup()
                        .addComponent(resSendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(resSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(resCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(content_requestLayout.createSequentialGroup()
                        .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(resRecipientLabel)
                            .addComponent(resMsgLabel)
                            .addComponent(resDateLabel)
                            .addComponent(resAddrLabel)
                            .addComponent(resPhoneLabel)
                            .addComponent(resSenderLabel)
                            .addComponent(resArtistLabel)
                            .addComponent(resNameLabel))
                        .addGap(42, 42, 42)
                        .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(resPhoneField)
                            .addComponent(resNameField)
                            .addComponent(resArtistField)
                            .addComponent(resSenderField)
                            .addComponent(resAdrrField)
                            .addComponent(resMsgScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(resRecipientField)
                            .addComponent(resDataField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(241, Short.MAX_VALUE))
        );
        content_requestLayout.setVerticalGroup(
            content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(content_requestLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resNameLabel)
                    .addComponent(resNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resArtistLabel)
                    .addComponent(resArtistField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resSenderLabel)
                    .addComponent(resSenderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resPhoneLabel)
                    .addComponent(resPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resAddrLabel)
                    .addComponent(resAdrrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resRecipientLabel)
                    .addComponent(resRecipientField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(resDateLabel)
                    .addComponent(resDataField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resMsgLabel)
                    .addComponent(resMsgScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addGroup(content_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resSendBtn)
                    .addComponent(resSubmitBtn)
                    .addComponent(resCancelBtn))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout parentLayout = new javax.swing.GroupLayout(parent);
        parent.setLayout(parentLayout);
        parentLayout.setHorizontalGroup(
            parentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentLayout.createSequentialGroup()
                .addComponent(sidePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(content_playlist, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE))
            .addGroup(parentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parentLayout.createSequentialGroup()
                    .addGap(0, 288, Short.MAX_VALUE)
                    .addComponent(content_manage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(parentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parentLayout.createSequentialGroup()
                    .addContainerGap(251, Short.MAX_VALUE)
                    .addComponent(content_request, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        parentLayout.setVerticalGroup(
            parentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(content_playlist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(parentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(parentLayout.createSequentialGroup()
                    .addComponent(content_manage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 40, Short.MAX_VALUE)))
            .addGroup(parentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(content_request, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(parent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pl_playlistMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pl_playlistMousePressed
        // TODO add your handling code here:
        setColor(pl_playlist);
        resetColor(pl_addrequest);
        resetColor(pl_management);
        resetColor(pl_schedule);
        
        ind_playlist.setOpaque(true);
        ind_addrequest.setOpaque(false);
        ind_management.setOpaque(false);
        ind_schedule.setOpaque(false);
    }//GEN-LAST:event_pl_playlistMousePressed

    private void pl_addrequestMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pl_addrequestMousePressed
        // TODO add your handling code here:
        setColor(pl_addrequest);
        resetColor(pl_playlist);
        resetColor(pl_management);
        resetColor(pl_schedule);
        
        ind_playlist.setOpaque(false);
        ind_addrequest.setOpaque(true);
        ind_management.setOpaque(false);
        ind_schedule.setOpaque(false);
    }//GEN-LAST:event_pl_addrequestMousePressed

    private void pl_scheduleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pl_scheduleMousePressed
        // TODO add your handling code here:
        setColor(pl_schedule);
        resetColor(pl_addrequest);
        resetColor(pl_management);
        resetColor(pl_playlist);
        
        ind_playlist.setOpaque(false);
        ind_addrequest.setOpaque(false);
        ind_management.setOpaque(false);
        ind_schedule.setOpaque(true);
    }//GEN-LAST:event_pl_scheduleMousePressed

    private void pl_managementMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pl_managementMousePressed
        // TODO add your handling code here:
        setColor(pl_management);
        resetColor(pl_addrequest);
        resetColor(pl_playlist);
        resetColor(pl_schedule);
        
        ind_playlist.setOpaque(false);
        ind_addrequest.setOpaque(false);
        ind_management.setOpaque(true);
        ind_schedule.setOpaque(false);
    }//GEN-LAST:event_pl_managementMousePressed

    private void playlistRdioAllSongsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlistRdioAllSongsActionPerformed
        /**
        * @author tuyên
        * diễn ra khi chọn tất cả bài hát
        */
        playlistSearchField.setEnabled(false);
        Month.setEnabled(false);
    }//GEN-LAST:event_playlistRdioAllSongsActionPerformed

    private void playlistRdioFavoriteSongsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlistRdioFavoriteSongsActionPerformed
        /**
        * @author tuyên
        * diễn ra khi chọn bài hát được yêu thích nhất tháng
        */
        playlistSearchField.setEnabled(false);
        Month.setEnabled(true);
    }//GEN-LAST:event_playlistRdioFavoriteSongsActionPerformed

    private void addSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongActionPerformed
        /**
        * @author tuyên
        * diễn ra khi chọn thêm bài hát
        */
        playlistSearchField.setEnabled(false);
        Month.setEnabled(false);
    }//GEN-LAST:event_addSongActionPerformed

    private void playlostSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlostSearchBtnActionPerformed
        playlistSearchField.setEnabled(true);
        Month.setEnabled(false);
    }//GEN-LAST:event_playlostSearchBtnActionPerformed

    private void okputOk(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okputOk
        int chosen =5;
        if(playlistRdioAllSongs.isSelected()){//chọn tât cả bài hát
            chosen = 0;
        }

        if(playlistRdioFavoriteSongs.isSelected()){//chọn bài hát yêu thích nhất tháng
            chosen = 1;
        }

        if(playlostSearchBtn.isSelected()){//tìm kiếm bài hát
            chosen = 2;
        }

        if(addSong.isSelected()){//thêm bài hát
            chosen = 3;
        }
        int month =  Month.getSelectedIndex() + 1;
        String name = playlistSearchField.getText().trim().toUpperCase();
        SongController control = new SongController(chosen, month, listSong, name, jLabel1);
        control.eventOK();
        TableModel data = listSong.getModel();
    }//GEN-LAST:event_okputOk

    private void playlistResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlistResetBtnActionPerformed
        String sql="UPDATE song SET vote='0' WHERE vote!='0'";
        Connection con = DataBase.getConnection();
        try {
            Statement statement = (Statement)con.createStatement();
            statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Reset thành công!");
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_playlistResetBtnActionPerformed

    private void MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonthActionPerformed

    private void resNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resNameFieldActionPerformed

    private void resSendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resSendBtnActionPerformed
        String nameSong = resNameField.getText().trim().toUpperCase();
        String nameArtist =resArtistField.getText().trim().toUpperCase();
        String nameSender=resSenderField.getText().trim().toUpperCase();
        String phoneNumber =resPhoneField.getText();
        String address=resAdrrField.getText().trim().toUpperCase();
        String nameReceipt=resRecipientField.getText().trim().toUpperCase();
        SimpleDateFormat dateFomat = new SimpleDateFormat("dd/MM/yyyy");
        String dateSended =dateFomat.format(resDataField.getDate());
        String message=resMsgTextArea.getText().trim();
        System.out.println(nameSong+ nameArtist + nameSender + phoneNumber+address+ nameReceipt+ dateSended+ message);
        if("".equals(nameSong)&&"".equals(nameArtist)&&"".equals(nameSender)&&("".equals(phoneNumber)||"".equals(address))&&"".equals(nameReceipt)&&"".equals(dateSended)&&"".equals(message))
        {
            JOptionPane.showMessageDialog(null, "Chưa nhập đủ trường.Xin mời nhập lại!");
        }
        else{
            try{
                RequirementController reqController =new RequirementController();
                Song song= reqController.getSong(nameSong, nameArtist);
                if(song!=null)
                {
                    reqController.updateSong(song);
                    Requirement requirement=new Requirement(nameSender, nameReceipt, phoneNumber, address, null, message, "Chưa phát", dateSended, 0, song.getId());
                    reqController.insertRequirement(requirement);
                }
                else
                {
                    long id= new java.util.Date().getTime();
                    song = new Song(id, nameSong, nameArtist, null, null, 0, 1);
                    reqController.insertSong(song);
                    Requirement requirement=new Requirement(nameSender, nameReceipt, phoneNumber, address, null, message, "Chưa phát", dateSended, 0, song.getId());
                    reqController.insertRequirement(requirement);
                }
            }catch(SQLException e){
                e.printStackTrace();
            }
        }
        resSenderField.setText("");
        resPhoneField.setText("");
        resAdrrField.setText("");
        resRecipientField.setText("");
        resMsgTextArea.setText("");
    }//GEN-LAST:event_resSendBtnActionPerformed

    private void resSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resSubmitBtnActionPerformed
        this.dispose();
        Management.main();
    }//GEN-LAST:event_resSubmitBtnActionPerformed

    private void resCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resCancelBtnActionPerformed
        resNameField.setText("");
        resArtistField.setText("");
        resSenderField.setText("");
        resPhoneField.setText("");
        resAdrrField.setText("");
        resRecipientField.setText("");
        resMsgTextArea.setText("");
    }//GEN-LAST:event_resCancelBtnActionPerformed

    private void schdlRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schdlRequestBtnActionPerformed
        if(idSongSelect!=0)
        {
            Management manager;
            try {
                manager = new Management();
                manager.main();
            } catch (SQLException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else
        JOptionPane.showMessageDialog(null, "Bạn chưa chọn bài hát!!!");
    }//GEN-LAST:event_schdlRequestBtnActionPerformed

    private void mgrSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mgrSearchBtnActionPerformed

        java.sql.Connection conn= DataBase.getConnection();
        String sql="INSERT INTO schedule(id,idsong,namesong,nameatirst,note) SELECT null,id,name,artist,'CHƯA PHÁT' FROM song WHERE song.id='"+idSongSelect+"'";
        String sqlUpdate="UPDATE requirement SET status='Đã thêm' WHERE songid='"+idSongSelect+"'";
        java.sql.Statement stmt;
        try {
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);
            stmt.executeUpdate(sqlUpdate);
            stmt.close();
            conn.close();
            JOptionPane.showMessageDialog(null, "Thêm vào lịch thành công!");
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mgrSearchBtnActionPerformed

    private void showDanhSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDanhSachActionPerformed
        try {
            SimpleDateFormat dateFomat = new SimpleDateFormat("dd/MM/yyyy");
            String dateSended =dateFomat.format(jDateChooser4.getDate());
            CalendarManagement cl = new CalendarManagement();
            cl.hienThi(mrgTable,"AND playdate='"+dateSended+"'");
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_showDanhSachActionPerformed

    private void mrgViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrgViewBtnActionPerformed
        if(idSongSelect!=0)
        {
            Management manager;
            try {
                manager = new Management();
                manager.main();
            } catch (SQLException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else
        JOptionPane.showMessageDialog(null, "Bạn chưa chọn bài hát!!!");
    }//GEN-LAST:event_mrgViewBtnActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed

        try {
            CalendarManagement cl = new CalendarManagement();
            cl.hienThi(mrgTable,"");
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshActionPerformed

    void setColor(JPanel panel){
        panel.setBackground(new Color(102,51,255));
    }
    
    void resetColor(JPanel panel){
        panel.setBackground(new Color(76,41,211));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Month;
    private javax.swing.JRadioButton addSong;
    private javax.swing.JPanel content_manage;
    private javax.swing.JPanel content_playlist;
    private javax.swing.JPanel content_request;
    private javax.swing.JPanel content_scheduling;
    private javax.swing.JPanel ind_addrequest;
    private javax.swing.JPanel ind_management;
    private javax.swing.JPanel ind_playlist;
    private javax.swing.JPanel ind_schedule;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTable listSong;
    private javax.swing.JButton mgrSearchBtn;
    private javax.swing.JLabel mgrSearchLabel;
    private javax.swing.ButtonGroup mode;
    private javax.swing.JSeparator mrgDivLine;
    private javax.swing.JScrollPane mrgScrollPane;
    private javax.swing.JTable mrgTable;
    private javax.swing.JButton mrgViewBtn;
    private javax.swing.JButton ok;
    private javax.swing.JPanel parent;
    private javax.swing.JPanel pl_addrequest;
    private javax.swing.JPanel pl_management;
    private javax.swing.JPanel pl_playlist;
    private javax.swing.JPanel pl_schedule;
    private javax.swing.JSeparator playlistDivLine;
    private javax.swing.JRadioButton playlistRdioAllSongs;
    private javax.swing.JRadioButton playlistRdioFavoriteSongs;
    private javax.swing.JButton playlistResetBtn;
    private javax.swing.JScrollPane playlistScrollPane;
    private javax.swing.JTextField playlistSearchField;
    private javax.swing.JRadioButton playlostSearchBtn;
    private javax.swing.JButton refresh;
    private javax.swing.JLabel resAddrLabel;
    private javax.swing.JTextField resAdrrField;
    private javax.swing.JTextField resArtistField;
    private javax.swing.JLabel resArtistLabel;
    private javax.swing.JButton resCancelBtn;
    private com.toedter.calendar.JDateChooser resDataField;
    private javax.swing.JLabel resDateLabel;
    private javax.swing.JLabel resMsgLabel;
    private javax.swing.JScrollPane resMsgScrollPane;
    private javax.swing.JTextArea resMsgTextArea;
    private javax.swing.JTextField resNameField;
    private javax.swing.JLabel resNameLabel;
    private javax.swing.JFormattedTextField resPhoneField;
    private javax.swing.JLabel resPhoneLabel;
    private javax.swing.JTextField resRecipientField;
    private javax.swing.JLabel resRecipientLabel;
    private javax.swing.JButton resSendBtn;
    private javax.swing.JTextField resSenderField;
    private javax.swing.JLabel resSenderLabel;
    private javax.swing.JButton resSubmitBtn;
    private javax.swing.JSeparator schdlDivLine;
    private javax.swing.JButton schdlPlayedBtn;
    private javax.swing.JButton schdlRequestBtn;
    private javax.swing.JScrollPane schdlScrollPane;
    private javax.swing.JTable schdlTable;
    private javax.swing.JButton schdlViewBtn;
    private javax.swing.JLabel schdlViewLabel;
    private javax.swing.JButton showDanhSach;
    private javax.swing.JPanel sidePane;
    // End of variables declaration//GEN-END:variables
}
